# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The zookeeper session timeout
blur.zookeeper.timeout=90000

# The path in HDFS where the distributed traces will be stored, if blank trace output will be written to the log or the ZooKeeper store.
blur.hdfs.trace.path=

# The maximum number of results that can be fetched in a single request
blur.query.max.results.fetch=1000

# The maximum number of rows that can be fetched in a single request
blur.query.max.row.fetch=100

# The maximum number of records that can be fetched in a single request
blur.query.max.record.fetch=1000

# Setup metric reporter
blur.metrics.reporters=

# Thrift max frame size
blur.thrift.max.frame.size=16384000

### Shard Server Configuration

# The hostname for the shard, if blank the hostname is automatically detected
blur.shard.hostname=

# The binding address of the shard
blur.shard.bind.address=0.0.0.0

# The default binding port of the shard server, 0 for random
blur.shard.bind.port=40020

# The number of fetcher threads
blur.shard.data.fetch.thread.count=8

# The number of the thrift threads
blur.shard.server.thrift.thread.count=8

# The number of threads used for selector processing inside the thrift server.
blur.shard.thrift.selector.threads=2

# The maximum number of bytes used for reading requests in the thrift server.
blur.shard.thrift.max.read.buffer.bytes=9223372036854775807

# The size of the blocking queue per selector thread for passing accepted connections to the selector thread.
blur.shard.thrift.accept.queue.size.per.thread=4

# The number of threads that are used for opening indexes
blur.shard.opener.thread.count=8

# The number of cached queries
blur.shard.cache.max.querycache.elements=128

# The time to live for the cache query
blur.shard.cache.max.timetolive=60000

# Default implementation of the blur cache filter, which is a pass through filter that does nothing
blur.shard.filter.cache.class=org.apache.blur.manager.DefaultBlurFilterCache

# Globally disable index warmup.
blur.shard.warmup.disabled=true

# Default Blur index warmup class that warms the fields provided in the table descriptor
blur.shard.index.warmup.class=org.apache.blur.manager.indexserver.DefaultBlurIndexWarmup

# Throttles the warmup to 30MB/s across all the warmup threads
blur.shard.index.warmup.throttle=30000000

# By default the v2 version of the block cache is enabled
blur.shard.block.cache.version=v2

# By default the total amount of memory block cache will use is -XX:MaxDirectMemorySize - 64 MiB
blur.shard.block.cache.total.size=

# v1 version of block cache only. By default the block cache using off heap memory
blur.shard.blockcache.direct.memory.allocation=true

# v1 version of block cache only. The slabs in the blockcache are automatically configured by default (-1) otherwise 1 slab equals 128MB.  The auto config is detected through the MaxDirectoryMemorySize provided to the JVM
blur.shard.blockcache.slab.count=-1

# v2 version of block cache only. File buffer size, this is the buffer size used to read and write to data to HDFS.  For production this will likely be increased.
blur.shard.block.cache.v2.fileBufferSize=8192

# v2 version of block cache only. The is the size of the blocks in the off heap cache, it is good practice to have this match 'blur.shard.block.cache.v2.fileBufferSize'.  For production this will likely be increased.
blur.shard.block.cache.v2.cacheBlockSize=8192

# v2 version of block cache only. Specific files type can have their own block cache sizes, such as filter files that should have a very large mapping. 
#blur.shard.block.cache.v2.cacheBlockSize.<ext>=
blur.shard.block.cache.v2.cacheBlockSize.filter=33554432

# v2 version of block cache only. This is used to control if the block are created on or off heap.  Values are OFF_HEAP | ON_HEAP
blur.shard.block.cache.v2.store=OFF_HEAP

# v2 version of block cache only. This specifies what file types should be cached during reads.  Comma delimited list.
blur.shard.block.cache.v2.read.cache.ext=

# v2 version of block cache only. This specifies what file types should NOT be cached during reads.  Comma delimited list.
blur.shard.block.cache.v2.read.nocache.ext=fdt

# v2 version of block cache only. This specifies the default behavior if a file type is not specified in the cache or nocache lists during reads.  Values true | false
blur.shard.block.cache.v2.read.default=true

# v2 version of block cache only. This specifies what file types should be cached during writes.  Comma delimited list.
blur.shard.block.cache.v2.write.cache.ext=

# v2 version of block cache only. This specifies what file types should NOT be cached during writes.  Comma delimited list.
blur.shard.block.cache.v2.write.nocache.ext=fdt

# v2 version of block cache only. This specifies the default behavior if a file type is not specified in the cache or nocache lists during writes.  Values true | false
blur.shard.block.cache.v2.write.default=true

# Sets the compression of used in the storing of the fields. Valid entries are FAST FAST_DECOMPRESSION HIGH_COMPRESSION
blur.shard.index.compressionmode=FAST

# Sets the chunksize of the compression in the storing of the fields. Larger values may produce smaller fdt files at the small cost of fetch performance.
blur.shard.index.chunksize=16384

# The amount of memory to be used by 8K byte buffers.  Note if you change the "blur.shard.block.cache.v2.cacheBlockSize" or "blur.shard.block.cache.v2.fileBufferSize" you should adjust the buffer sizes as well as the total memory allocated.  For example if you increased the "blur.shard.block.cache.v2.fileBufferSize" to 64K (65536) then this property should to "blur.shard.buffercache.65536".  You can also define as many of these properties as needed.
blur.shard.buffercache.8192=67108864

# The amount of memory to be used by 1K byte buffers.  Note if you change the "blur.shard.block.cache.v2.cacheBlockSize" or "blur.shard.block.cache.v2.fileBufferSize" you should adjust the buffer sizes as well as the total memory allocated.
blur.shard.buffercache.1024=8388608

# The number of milliseconds to wait for the cluster to settle once changes have ceased.
blur.shard.safemodedelay=5000

# The number of shard servers in a cluster that have to be registered before the cluster will exit safemode.
blur.shard.server.minimum.before.safemode.exit=0

# The default time between index commits
blur.shard.time.between.commits=30000

# The default time between index refreshs
blur.shard.time.between.refreshs=3000

# The max number of threads used during index merges
blur.shard.merge.thread.count=8

# The maximum number of clauses in a BooleanQuery
blur.max.clause.count=1024

# The number of thread used for parallel searching in the index manager
blur.indexmanager.search.thread.count=8

# The number of thread used for parallel mutating in the index manager
blur.indexmanager.mutate.thread.count=8

# The number of thread used for parallel faceting in the index manager
blur.indexmanager.facet.thread.count=8

# Number of threads used for warming up the index
blur.shard.warmup.thread.count=8

# The fetch count per Lucene search, this fetches pointers to hits
blur.shard.fetchcount=110

# Heap limit on row fetch, once this limit has been reached the request will return
blur.max.heap.per.row.fetch=10000000

# The maximum number of records in a single row fetch
blur.max.records.per.row.fetch.request=1000

# The http status page port for the shard server, 0 for random
blur.gui.shard.port=40090

# To intercept the calls made to the shard server and perform server side changes to the calls extend org.apache.blur.server.FilteredBlurServer.
blur.shard.filtered.server.class=

# Defines the blur index class to be used to handle index requests.  This class has to extend org.apache.blur.manager.writer.BlurIndex.  This can be defined globally as well as per table.
blur.shard.blurindex.class=

# Defines the blur read interceptor class that can mask data from query results as well as data fetches.
blur.shard.read.interceptor=

# Defines the byte array factory class that blur will use to manage the FST trees in Lucene (extends org.apache.blur.lucene.fst.ByteArrayFactory).
blur.lucene.fst.bytearray.factory=

# The maximum amount of time to pause before checking the queue for RowMutations.
blur.shard.queue.max.pause.time.when.empty=1000

# The maximum amount of time that the queue can lock the writer before committing.  NOTE: Any other writer event will cause the queue to release it's lock on the writer.
blur.shard.queue.max.writer.lock.time=5000

# The maximum number of RowMutations the writer can drain from the queue at a time. 
blur.shard.queue.max.queue.batch.size=100

# The maximum number of RowMutations that can exist in the inmemory block queue any point in time.  NOTE: This is PER SHARD.
blur.shard.queue.max.inmemory.length=100

# The number of deep paging cache entries kept in memory for faster deep paging.
blur.shard.deep.paging.cache.size=1000


### Controller Server Configuration

# Sets the hostname for the controller, if blank the hostname is automatically detected
blur.controller.hostname=

# The binding address of the controller
blur.controller.bind.address=0.0.0.0

# The default binding port of the controller server, 0 for random
blur.controller.bind.port=40010

# The connection timeout, NOTE: this will be the maximum amount of time you can wait for a query.
blur.controller.shard.connection.timeout=60000

# The number of threads used for thrift requests
blur.controller.server.thrift.thread.count=32

# The number of threads used for remote thrift requests to the shards server.  This should be a large number.
blur.controller.server.remote.thread.count=64

# The number of threads used for selector processing inside the thrift server.
blur.controller.thrift.selector.threads=2

# The maximum number of bytes used for reading requests in the thrift server.
blur.controller.thrift.max.read.buffer.bytes=9223372036854775807

# The size of the blocking queue per selector thread for passing accepted connections to the selector thread.
blur.controller.thrift.accept.queue.size.per.thread=4

# The number of hits to fetch per request to the shard servers
blur.controller.remote.fetch.count=150

# The max number of retries to the shard server when there is an error during fetch
blur.controller.retry.max.fetch.retries=3

# The max number of retries to the shard server when there is an error during mutate
blur.controller.retry.max.mutate.retries=3

# The max number of retries to the shard server when there is an error during all other request
blur.controller.retry.max.default.retries=3

# The starting backoff delay for the first retry for a fetch errors
blur.controller.retry.fetch.delay=500

# The starting backoff delay for the first retry for a mutate errors
blur.controller.retry.mutate.delay=500

# The starting backoff delay for the first retry for a all other request errors
blur.controller.retry.default.delay=500

# The ending backoff delay for the last retry for a fetch errors
blur.controller.retry.max.fetch.delay=2000

# The ending backoff delay for the last retry for a mutate errors
blur.controller.retry.max.mutate.delay=2000

# The ending backoff delay for the last retry for a all other request errors
blur.controller.retry.max.default.delay=2000

# The http status page port for the controller server, 0 for random
blur.gui.controller.port=40080

# To intercept the calls made to the controller server and perform server side changes to the calls extend org.apache.blur.server.FilteredBlurServer.
blur.controller.filtered.server.class=



